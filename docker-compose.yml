services:
  ollama_nginx_gateway:
    build:
      context: ./nginx  # Path to the directory containing the Dockerfile
      dockerfile: Dockerfile
    container_name: ollama_nginx_gateway
    ports:
      - "${NGINX_HOST_PORT:-80}:80"
                   # Clients will connect to http://<your_controller_machine_ip>:8080
    volumes:
      - ./nginx/api_keys.conf:/etc/nginx/custom_conf/api_keys.conf:ro
      # - ./nginx/upstream_ollama.conf:/etc/nginx/custom_conf/upstream_ollama.conf:ro
      - ./nginx/conf.d/ollama_gateway.conf:/etc/nginx/conf.d/ollama_gateway.conf:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs:/var/log/nginx
    restart: unless-stopped # Restart the container unless it's manually stopped
    depends_on:
      - wakeup_service
    networks:
      - llm_infra_network # Optional: define a custom network if you add more services

  wakeup_service:
    build:
      context: ./wakeup_service
      dockerfile: Dockerfile
    container_name: surf_wakeup_service
    restart: unless-stopped
    environment:
      - SURF_API_URL=${SURF_API_URL}
      - SURF_API_TOKEN=${SURF_API_TOKEN}
      - SURF_CSRF_TOKEN=${SURF_CSRF_TOKEN}
      - VM_DATA_FILE=/app/vm_data/surf_vms.csv
      - OLLAMA_DEFAULT_PORT=${OLLAMA_DEFAULT_PORT:-11434}
      - AUTO_PAUSE_CHECK_INTERVAL=${AUTO_PAUSE_CHECK_INTERVAL:-60}
      - AUTO_PAUSE_INACTIVITY_THRESHOLD=${AUTO_PAUSE_INACTIVITY_THRESHOLD:-600}
      - WAKEUP_TIMEOUT_SECONDS=${WAKEUP_TIMEOUT_SECONDS:-150}
      - TARGET_ACTIVE_GPUS=${TARGET_ACTIVE_GPUS:-1}
      - SCALE_UP_COOLDOWN_SECONDS=${SCALE_UP_COOLDOWN_SECONDS:-60}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./vm_data:/app/vm_data:ro
    networks:
      - llm_infra_network

networks:
  llm_infra_network:
    driver: bridge


# --- Placeholder for your future GUI/API key management service ---
#  key_management_gui:
#    image: your-future-gui-image # Replace with your actual GUI image
#    container_name: key_management_gui
#    ports:
#      - "3000:3000" # Example port for the GUI
#    volumes:
      # This service might need to write to api_keys.conf if it's managing it directly,
      # or it would interact with a database and Nginx would use auth_request.
      # If it writes to api_keys.conf, the volume mount would need to be read-write (rw).
      # - ./nginx/api_keys.conf:/app/data/api_keys.conf:rw
#    networks:
#      - ollama_network
#    depends_on:
#      - ollama_nginx_gateway # If it needs Nginx to be up first
